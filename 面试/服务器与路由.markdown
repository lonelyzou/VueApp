##构建服务器
###（简单版 用express）
* 引入express模块 ：  const express = require('express');
* 创建app应用对象  ：  const app = express();
* 设置路由（在app上设置路由）
    * app.get('/shop/a', (req, res) => {
      res.send('这是/shop/a返回的响应');
      })
    * app.post('/shop/a', (req, res) => {
      res.send('这是/shop/a返回的响应');
      })
* 监听端口号（localhost:3000）
    * app.listen(3000, err => {
  if (!err) console.log('服务器启动成功了~');
  else console.log(err);
})


### 路由详解
* 1. 作用：
      - 定义请求地址
      - 处理请求、返回响应
* 2. 组成：
      - 请求方式： GET(查) POST(增) PUT(改) DELETE(删)
      - 路由路径： 定义请求地址
       * 基本 :一个url网址对应一个路由
         * /（一个/代表根路由，根路径）  localhost:3000  
         * /login         localhost:3000/login
         * /shop/a        localhost:3000/shop/a
         
       * 特殊: /xxx/:xxx   多个url网址对应一个路由
         * app.get('/hotel/:id', (req, res) => {
  console.log(req.params); // { id: '123456' } { id: '456789' }
  res.send('这是/hotel/:id返回的响应');
         * :id ：有:id就表示你可以在 localhost:3000//hotel/（这里可以输入任意字符，但是请求的也页面还是一样的，输出一样的回调函数的内容）
         * 你可以通过req.params 来获取到你在url输入的这个id 
})
      - 若干个回调函数（句柄函数）
        * request 请求信息， 浏览器发送服务器的
         * 请求参数
             * get请求参数             
               * req.query => 查询字符串(就是url上传输的数据)比如localhost:3000/login？username=123&&password=123
               * req.query 返回{username:123,password:123}
             * post请求参数 -- req.body(配和中间件使用)
             * params参数  req.params
             * 请求头信息
          * req.headers 获取所有请求头信息
        * response 响应信息, 服务器发给浏览器
         * 以下代码都是返回响应方法，一经调用，服务器就会返回响应给浏览器（所以一般不在方法后面写代码，还要保证返回响应的方法只能调用一个）
         *  返回响应
         * res.send()
          如果是标签字符串，会再响应头添加Content-type: text/html;charset=utf8
          如果是js对象，转换为json数据并作为响应体返回
         * res.end()   快速返回响应 ，就是什么都不做，将东西原原本本的返回回去
           res.end('123456');
         * res.json()  将对象转换为json数据并作为响应体返回   
          // res.json({name: 111, age: 222});     
         * res.download(文件相对路径) 返回响应，让浏览器下载当前文件
         // res.download('./01.闭包.html');
         * res.sendFile(文件绝对路径) 返回响应，让浏览器打开当前文件
           -- res.sendFile(__dirname + '\\01.闭包.html');
           __dirname：文件绝对路径
         * res.redirect()  重定向到其他资源地址, 默认响应状态码302
           // res.redirect(301, 'http://www.atguigu.com');
         * res.status(301) 设置响应状态码
           //res.status() 
         * res.set(key,vlaue)  设置响应头
             // res.set('x-xxx', 'xxxxxxxx');
* 3. 是什么
      - key-value的映射关系 key是路由路径，value是回调函数
      - 一个请求路径('/shop/a')对应着一个回调函数（(req, res) => {});
      - url输入相应的请求路径时，就会调用相应的回调函数（返回响应）
* 4. 执行顺序
      从上到下，依次检查是否匹配上了路由，如果有就执行相应的回调函数，如果没有匹配上就看下一个
      如果都没有匹配上。返回404